/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { SmtVerifier, SmtVerifierInterface } from "../../../contracts/verifiers/SmtVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[1]",
        name: "input",
        type: "uint256[1]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506112d8806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806343753b4d14610030575b600080fd5b61018f600480360361012081101561004757600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156100fc578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906100a8565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080602001906001806020026040519081016040528092919082600160200280828437600081840152601f19601f82011690508083019250505050505091929192905050506101a9565b604051808215151515815260200191505060405180910390f35b60006101b3611160565b6040518060400160405280876000600281106101cb57fe5b60200201518152602001876001600281106101e257fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808860006002811061021557fe5b602002015160006002811061022657fe5b602002015181526020018860006002811061023d57fe5b602002015160016002811061024e57fe5b6020020151815250815260200160405180604001604052808860016002811061027357fe5b602002015160006002811061028457fe5b602002015181526020018860016002811061029b57fe5b60200201516001600281106102ac57fe5b602002015181525081525081602001819052506040518060400160405280856000600281106102d757fe5b60200201518152602001856001600281106102ee57fe5b602002015181525081604001819052506060600167ffffffffffffffff8111801561031857600080fd5b506040519080825280602002602001820160405280156103475781602001602082028036833780820191505090505b50905060008090505b600181101561038f5784816001811061036557fe5b602002015182828151811061037657fe5b6020026020010181815250508080600101915050610350565b50600061039c82846103bc565b14156103ad576001925050506103b4565b6000925050505b949350505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506103ea611193565b6103f26105f0565b9050806080015151600186510114610472576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f76657269666965722d6261642d696e707574000000000000000000000000000081525060200191505060405180910390fd5b61047a6111da565b6040518060400160405280600081526020016000815250905060008090505b865181101561057957838782815181106104af57fe5b60200260200101511061052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c640081525060200191505060405180910390fd5b61056a826105658560800151600185018151811061054457fe5b60200260200101518a858151811061055857fe5b60200260200101516109e3565b610ade565b91508080600101915050610499565b5061059c81836080015160008151811061058f57fe5b6020026020010151610ade565b90506105d26105ae8660000151610bf8565b8660200151846000015185602001518587604001518b604001518960600151610c92565b6105e257600193505050506105ea565b600093505050505b92915050565b6105f8611193565b60405180604001604052807f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e281526020017f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19268152508160000181905250604051806040016040528060405180604001604052807f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c81526020017f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab815250815260200160405180604001604052807f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a781526020017f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec88152508152508160200181905250604051806040016040528060405180604001604052807f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed815250815260200160405180604001604052807f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81526020017f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa8152508152508160400181905250604051806040016040528060405180604001604052807f06050443d996ddabea12e3390e3eb6022c4f0a559634993921ba2f664caa626681526020017f01418bc8668f640b8a86cf4ae4a6449417fbd423ee3f8c7e18c0f3cd1ccabae7815250815260200160405180604001604052807f19eb6c765e1a9c12f96d49ad0738a46dd1ea928513c5df96250d3a2e156cdbc781526020017f0e81f3966191e2052b293623ab925a866c31eb164f0d064896259daa9b4b36478152508152508160600181905250600267ffffffffffffffff811180156108bc57600080fd5b506040519080825280602002602001820160405280156108f657816020015b6108e36111da565b8152602001906001900390816108db5790505b50816080018190525060405180604001604052807f2b6e71df2a94fe9dbe2991343060315077a1569bf38430281b75cc9b98f71c8081526020017f301d949d4acb2ec81b8a2aaf06d9069e2cde486fb52c1fa5deaf2bbb2ae93537815250816080015160008151811061096557fe5b602002602001018190525060405180604001604052807f05be1f8460039161704a97f8181adaf288c90639087e1833887ec207d96ba27881526020017e4aedad8c792afbbc9ae9d3b5e58a93e4ba919305b2bf7d8b6fcda9f58ff85a81525081608001516001815181106109d557fe5b602002602001018190525090565b6109eb6111da565b6109f36111f4565b836000015181600060038110610a0557fe5b602002018181525050836020015181600160038110610a2057fe5b6020020181815250508281600260038110610a3757fe5b602002018181525050600060608360808460076107d05a03fa90508060008114610a6057610a62565bfe5b5080610ad6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f70616972696e672d6d756c2d6661696c6564000000000000000000000000000081525060200191505060405180910390fd5b505092915050565b610ae66111da565b610aee611216565b836000015181600060048110610b0057fe5b602002018181525050836020015181600160048110610b1b57fe5b602002018181525050826000015181600260048110610b3657fe5b602002018181525050826020015181600360048110610b5157fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114610b7a57610b7c565bfe5b5080610bf0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f70616972696e672d6164642d6661696c6564000000000000000000000000000081525060200191505060405180910390fd5b505092915050565b610c006111da565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015610c3d575060008360200151145b15610c61576040518060400160405280600081526020016000815250915050610c8d565b60405180604001604052808460000151815260200182856020015181610c8357fe5b0683038152509150505b919050565b60006060600467ffffffffffffffff81118015610cae57600080fd5b50604051908082528060200260200182016040528015610ce857816020015b610cd56111da565b815260200190600190039081610ccd5790505b5090506060600467ffffffffffffffff81118015610d0557600080fd5b50604051908082528060200260200182016040528015610d3f57816020015b610d2c611238565b815260200190600190039081610d245790505b5090508a82600081518110610d5057fe5b60200260200101819052508882600181518110610d6957fe5b60200260200101819052508682600281518110610d8257fe5b60200260200101819052508482600381518110610d9b57fe5b60200260200101819052508981600081518110610db457fe5b60200260200101819052508781600181518110610dcd57fe5b60200260200101819052508581600281518110610de657fe5b60200260200101819052508381600381518110610dff57fe5b6020026020010181905250610e148282610e24565b9250505098975050505050505050565b60008151835114610e9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f70616972696e672d6c656e677468732d6661696c65640000000000000000000081525060200191505060405180910390fd5b600083519050600060068202905060608167ffffffffffffffff81118015610ec457600080fd5b50604051908082528060200260200182016040528015610ef35781602001602082028036833780820191505090505b50905060008090505b8381101561109957868181518110610f1057fe5b602002602001015160000151826000600684020181518110610f2e57fe5b602002602001018181525050868181518110610f4657fe5b602002602001015160200151826001600684020181518110610f6457fe5b602002602001018181525050858181518110610f7c57fe5b602002602001015160000151600060028110610f9457fe5b6020020151826002600684020181518110610fab57fe5b602002602001018181525050858181518110610fc357fe5b602002602001015160000151600160028110610fdb57fe5b6020020151826003600684020181518110610ff257fe5b60200260200101818152505085818151811061100a57fe5b60200260200101516020015160006002811061102257fe5b602002015182600460068402018151811061103957fe5b60200260200101818152505085818151811061105157fe5b60200260200101516020015160016002811061106957fe5b602002015182600560068402018151811061108057fe5b6020026020010181815250508080600101915050610efc565b506110a261125e565b6000602082602086026020860160086107d05a03fa905080600081146110c7576110c9565bfe5b508061113d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f70616972696e672d6f70636f64652d6661696c6564000000000000000000000081525060200191505060405180910390fd5b60008260006001811061114c57fe5b602002015114159550505050505092915050565b60405180606001604052806111736111da565b8152602001611180611238565b815260200161118d6111da565b81525090565b6040518060a001604052806111a66111da565b81526020016111b3611238565b81526020016111c0611238565b81526020016111cd611238565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b604051806040016040528061124b611280565b8152602001611258611280565b81525090565b6040518060200160405280600190602082028036833780820191505090505090565b604051806040016040528060029060208202803683378082019150509050509056fea26469706673582212207ea2082e5bf8f0388619365c8d670ed6d34d186b3911c1d60e233a73f038cdb064736f6c634300060b0033";

type SmtVerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: SmtVerifierConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class SmtVerifier__factory extends ContractFactory {
  constructor(...args: SmtVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SmtVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SmtVerifier__factory {
    return super.connect(runner) as SmtVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmtVerifierInterface {
    return new Interface(_abi) as SmtVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SmtVerifier {
    return new Contract(address, _abi, runner) as unknown as SmtVerifier;
  }
}
