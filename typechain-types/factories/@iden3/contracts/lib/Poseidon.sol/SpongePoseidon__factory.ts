/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  SpongePoseidon,
  SpongePoseidonInterface,
} from "../../../../../@iden3/contracts/lib/Poseidon.sol/SpongePoseidon";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "hash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6105c2610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806340ec6e491461003a575b600080fd5b610054600480360381019061004f919061031a565b61006a565b6040516100619190610380565b60405180910390f35b6000806040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090506000806000805b878790508163ffffffff16101561021c576001935087878263ffffffff168181106100d7576100d661039b565b5b90506020020135858363ffffffff16600681106100f7576100f661039b565b5b6020020181815250506001600661010e9190610409565b63ffffffff168263ffffffff16036101fa5773__$037d0ef5096c0205b2ca530e7bc3ca349a$__63f5b4a788866040518263ffffffff1660e01b815260040161015791906104ec565b602060405180830381865af4158015610174573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101989190610533565b9250600093506040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815250945082856000600681106101e8576101e761039b565b5b60200201818152505060019150610209565b818061020590610560565b9250505b808061021490610560565b9150506100a9565b50821561029e5773__$037d0ef5096c0205b2ca530e7bc3ca349a$__63f5b4a788856040518263ffffffff1660e01b815260040161025a91906104ec565b602060405180830381865af4158015610277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029b9190610533565b91505b8194505050505092915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126102da576102d96102b5565b5b8235905067ffffffffffffffff8111156102f7576102f66102ba565b5b602083019150836020820283011115610313576103126102bf565b5b9250929050565b60008060208385031215610331576103306102ab565b5b600083013567ffffffffffffffff81111561034f5761034e6102b0565b5b61035b858286016102c4565b92509250509250929050565b6000819050919050565b61037a81610367565b82525050565b60006020820190506103956000830184610371565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600063ffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610414826103ca565b915061041f836103ca565b9250828203905063ffffffff81111561043b5761043a6103da565b5b92915050565b600060069050919050565b600081905092915050565b6000819050919050565b61046a81610367565b82525050565b600061047c8383610461565b60208301905092915050565b6000602082019050919050565b61049e81610441565b6104a8818461044c565b92506104b382610457565b8060005b838110156104e45781516104cb8782610470565b96506104d683610488565b9250506001810190506104b7565b505050505050565b600060c0820190506105016000830184610495565b92915050565b61051081610367565b811461051b57600080fd5b50565b60008151905061052d81610507565b92915050565b600060208284031215610549576105486102ab565b5b60006105578482850161051e565b91505092915050565b600061056b826103ca565b915063ffffffff8203610581576105806103da565b5b60018201905091905056fea26469706673582212207d956b20c74e0ab9d61c145d5233bcdfc45752616c4537fcd173eda59b6169ed64736f6c63430008100033";

type SpongePoseidonConstructorParams =
  | [linkLibraryAddresses: SpongePoseidonLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: SpongePoseidonConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SpongePoseidon__factory extends ContractFactory {
  constructor(...args: SpongePoseidonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, SpongePoseidon__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: SpongePoseidonLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$037d0ef5096c0205b2ca530e7bc3ca349a\\$__", "g"),
      linkLibraryAddresses["@iden3/contracts/lib/Poseidon.sol:PoseidonUnit6L"].replace(/^0x/, "").toLowerCase(),
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SpongePoseidon & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SpongePoseidon__factory {
    return super.connect(runner) as SpongePoseidon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpongePoseidonInterface {
    return new Interface(_abi) as SpongePoseidonInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SpongePoseidon {
    return new Contract(address, _abi, runner) as unknown as SpongePoseidon;
  }
}

export interface SpongePoseidonLibraryAddresses {
  ["@iden3/contracts/lib/Poseidon.sol:PoseidonUnit6L"]: string;
}
