/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "PoseidonFacade",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.PoseidonFacade__factory>;
    getContractFactory(
      name: "PoseidonUnit1L",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.PoseidonUnit1L__factory>;
    getContractFactory(
      name: "PoseidonUnit2L",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.PoseidonUnit2L__factory>;
    getContractFactory(
      name: "PoseidonUnit3L",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.PoseidonUnit3L__factory>;
    getContractFactory(
      name: "PoseidonUnit4L",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.PoseidonUnit4L__factory>;
    getContractFactory(
      name: "PoseidonUnit5L",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.PoseidonUnit5L__factory>;
    getContractFactory(
      name: "PoseidonUnit6L",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.PoseidonUnit6L__factory>;
    getContractFactory(
      name: "SpongePoseidon",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.SpongePoseidon__factory>;
    getContractFactory(
      name: "SmtMock",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.SmtMock__factory>;
    getContractFactory(
      name: "SmtVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.SmtVerifier__factory>;

    getContractAt(
      name: "PoseidonFacade",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.PoseidonFacade>;
    getContractAt(
      name: "PoseidonUnit1L",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.PoseidonUnit1L>;
    getContractAt(
      name: "PoseidonUnit2L",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.PoseidonUnit2L>;
    getContractAt(
      name: "PoseidonUnit3L",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.PoseidonUnit3L>;
    getContractAt(
      name: "PoseidonUnit4L",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.PoseidonUnit4L>;
    getContractAt(
      name: "PoseidonUnit5L",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.PoseidonUnit5L>;
    getContractAt(
      name: "PoseidonUnit6L",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.PoseidonUnit6L>;
    getContractAt(
      name: "SpongePoseidon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.SpongePoseidon>;
    getContractAt(
      name: "SmtMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.SmtMock>;
    getContractAt(
      name: "SmtVerifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.SmtVerifier>;

    deployContract(
      name: "PoseidonFacade",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonFacade>;
    deployContract(
      name: "PoseidonUnit1L",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit1L>;
    deployContract(
      name: "PoseidonUnit2L",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit2L>;
    deployContract(
      name: "PoseidonUnit3L",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit3L>;
    deployContract(
      name: "PoseidonUnit4L",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit4L>;
    deployContract(
      name: "PoseidonUnit5L",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit5L>;
    deployContract(
      name: "PoseidonUnit6L",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit6L>;
    deployContract(
      name: "SpongePoseidon",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SpongePoseidon>;
    deployContract(
      name: "SmtMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SmtMock>;
    deployContract(
      name: "SmtVerifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SmtVerifier>;

    deployContract(
      name: "PoseidonFacade",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonFacade>;
    deployContract(
      name: "PoseidonUnit1L",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit1L>;
    deployContract(
      name: "PoseidonUnit2L",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit2L>;
    deployContract(
      name: "PoseidonUnit3L",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit3L>;
    deployContract(
      name: "PoseidonUnit4L",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit4L>;
    deployContract(
      name: "PoseidonUnit5L",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit5L>;
    deployContract(
      name: "PoseidonUnit6L",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PoseidonUnit6L>;
    deployContract(
      name: "SpongePoseidon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SpongePoseidon>;
    deployContract(
      name: "SmtMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SmtMock>;
    deployContract(
      name: "SmtVerifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SmtVerifier>;

    // default types
    getContractFactory(name: string, signerOrOptions?: ethers.Signer | FactoryOptions): Promise<ethers.ContractFactory>;
    getContractFactory(abi: any[], bytecode: ethers.BytesLike, signer?: ethers.Signer): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<ethers.Contract>;
    deployContract(name: string, signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<ethers.Contract>;
  }
}
